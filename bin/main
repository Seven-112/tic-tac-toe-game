#!/usr/bin/env ruby
# frozen_string_literal: true

# rubocop:disable Style/ConditionalAssignment
require './lib/game_logic'

class TicTacToe
  def board(table)
    i = 0
    while i < table.size
      puts '+---+---+---+'
      puts "| #{table[i]} | #{table[i + 1]} | #{table[i + 2]} |"
      i += 3
    end
    puts '+---+---+---+'
  end
end

game = GameLogic.new
puts 'Player1 enter your name: '.blue
game.p_1 = gets.chomp

messages = Message.new
messages.info = game.p_1

while messages.name_length?(3, 10)
  puts 'Player1 name must be between 3 to 10 characters'.yellow
  game.p_1 = gets.chomp
  messages.info = game.p_1
end

puts "\nPlayer2 enter your name: ".light_blue
game.p_2 = gets.chomp
messages.info = game.p_2

while messages.name_length?(3, 10) || game.compare_user_entry?
  if game.compare_user_entry?
    puts 'Name already taken!'.red
    messages.info = game.p_2 = gets.chomp
  else
    puts 'Player2 name must be between 3 to 10 characters'.yellow
    game.p_2 = gets.chomp
  end
  messages.info = game.p_2
end

puts "\nChoose a symbol 'x' or 'o' to play".blue
puts "#{game.p_1}, choose a symbol: ".yellow
game.p_1_symb = gets.chomp

until messages.valid_symbols?(game.p_1_symb)
  puts "Invalid symbol, retry again 'x' or 'o'".red
  game.p_1_symb = gets.chomp
  messages.info = game.p_1
end

if game.p_1_symb == 'x'
  game.p_2_symb = 'o'
else
  game.p_2_symb = 'x'
end

puts "\nLet's start, #{game.p_1}: (#{game.p_1_symb})".yellow
puts "Let's start, #{game.p_2}: (#{game.p_2_symb})".yellow

table = [1, 2, 3, 4, 5, 6, 7, 8, 9]
tic_tac_toe = TicTacToe.new
tic_tac_toe.board(table)

i = 0
while i.zero?

  (0..1).each do |p_c|
    user = [[game.p_1.blue, game.p_1_symb], [game.p_2.pink, game.p_2_symb]]

    puts "#{user[p_c][0]} please select a number from 1-9"
    choice = gets.chomp
    until messages.valid_nbr_from_board?(choice.to_i, 1, 9, table)[0] &&
          messages.valid_nbr_from_board?(choice.to_i, 1, 9, table)[1]

      if messages.valid_nbr_from_board?(choice.to_i, 1, 9, table)[0] &&
         !messages.valid_nbr_from_board?(choice.to_i, 1, 9, table)[1]
        puts "\n#{user[p_c][0]} Number already taken, retry"
      else
        puts "#{user[p_c][0]} reselect a number from 1-9"
      end
      choice = gets.chomp
    end

    table = game.move(table, choice.to_i, user[p_c][1].to_s)

    tic_tac_toe.board(table)
    if game.h_win(user[p_c][1], table)
      puts "Congratulations #{user[p_c][0]} you win the game!".green
      i = 1
      break
    elsif game.draw(table)
      puts 'The game is tie, play again'.pink
      i = 1
      break
    end
  end
end

# rubocop:enable Style/ConditionalAssignment
