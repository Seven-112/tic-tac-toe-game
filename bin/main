#!/usr/bin/env ruby

# rubocop:disable Style/ConditionalAssignment, Style/BlockLength
require './lib/messages'

# Instaciate TicTacToe class
game = TicTacToe.new
game.p_1 = game.u_entry('Player1 enter your name: '.green)

# Instaciate Messages class
messages = Message.new
messages.info = game.p_1

while messages.name_length?(3, 10)
  game.p_1 = game.u_entry('Player1 name must be between 3 to 10 characters'.red)
  messages.info = game.p_1
end

game.p_2 = game.u_entry("\nPlayer2 enter your name: ")
messages.info = game.p_2

while messages.name_length?(3, 10) || game.compare_user_entry?
  if game.compare_user_entry?
    messages.info = game.p_2 = game.u_entry('Name already taken!')
  else
    game.p_2 = game.u_entry('Player2 name must be between 3 to 10 characters')
  end
  messages.info = game.p_2
end

# Choosing a symbols
puts "\nChoose a symbol 'x' or 'o' to play"
game.p_1_symb = game.u_entry("#{game.p_1}, choose a symbol: ")

until messages.valid_symbols?(game.p_1_symb)
  game.p_1_symb = game.u_entry("Invalid symbol, retry again 'x' or 'o'")
  messages.info = game.p_1
end

if game.p_1_symb == 'x'
  game.p_2_symb = 'o'
else
  game.p_2_symb = 'x'
end

# Display the Players
puts "\nLet's start, #{game.p_1}: (#{game.p_1_symb})"
puts "Let's start, #{game.p_2}: (#{game.p_2_symb})"

# init table
table = [1, 2, 3, 4, 5, 6, 7, 8, 9]

# Dispaly the board
game.board(table)

# Start playing
loop do
  p1_choice = game.u_entry("#{game.p_1} please select a number from 1-9")
  until messages.valid_nbr_from_board?(p1_choice.to_i, 1, 9, table)[0] &&
        messages.valid_nbr_from_board?(p1_choice.to_i, 1, 9, table)[1]

    if messages.valid_nbr_from_board?(p1_choice.to_i, 1, 9, table)[0] &&
       !messages.valid_nbr_from_board?(p1_choice.to_i, 1, 9, table)[1]
      p1_choice = game.u_entry("\n#{game.p_1} Number already taken, retry")
    else
      p1_choice = game.u_entry("#{game.p_1} please select v a number from 1-9")
    end
  end

  table = game.move(table, p1_choice.to_i, game.p_1_symb.to_s)

  game.board(table)
  if game.h_win(game.p_1_symb, table)
    puts "Congratulations #{game.p_1.pink}, you win the game!".green
    break
  elsif game.draw(table)
    puts 'The game is tie, play again'.pink
    break
  end

  p2_choice = game.u_entry("#{game.p_2} please select a number from 1-9")
  until messages.valid_nbr_from_board?(p2_choice.to_i, 1, 9, table)[0] &&
        messages.valid_nbr_from_board?(p2_choice.to_i, 1, 9, table)[1]

    if messages.valid_nbr_from_board?(p2_choice.to_i, 1, 9, table)[0] &&
       !messages.valid_nbr_from_board?(p2_choice.to_i, 1, 9, table)[1]
      p2_choice = game.u_entry("\n#{game.p_2} Number already taken, retry")
    else
      p2_choice = game.u_entry("#{game.p_2} please select v a number from 1-9")
    end
  end

  table = game.move(table, p2_choice.to_i, game.p_2_symb.to_s)

  game.board(table)
  if game.h_win(game.p_2_symb, table)
    puts "Congratulations #{game.p_2.blue}, you win the game!".green
    break
  elsif game.draw(table)
    puts 'The game is tie, play again'.pink
    break
  end
end

# rubocop:enable Style/ConditionalAssignment, Style/BlockLength
